{
    "code": "import React, { useState, useEffect } from 'react';\nimport { Task } from './TaskModel';\nimport { updateTask } from './api';\n\ninterface TaskEditProps {\n  task: Task;\n  onSave: (task: Task) => void;\n  onCancel: () => void;\n}\n\nconst TaskEdit: React.FC<TaskEditProps> = ({ task, onSave, onCancel }) => {\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  const [status, setStatus] = useState(task.status);\n\n  useEffect(() => {\n    setTitle(task.title);\n    setDescription(task.description);\n    setStatus(task.status);\n  }, [task]);\n\n  const handleSave = async () => {\n    const updatedTask = { ...task, title, description, status };\n    const response = await updateTask(updatedTask);\n    if (response.ok) {\n      onSave(updatedTask);\n    } else {\n      // Handle error\n    }\n  };\n\n  return (\n    <div className='task-edit'>\n      <input\n        type='text'\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder='Title'\n      />\n      <textarea\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        placeholder='Description'\n      />\n      <select value={status} onChange={(e) => setStatus(e.target.value)}>\n        <option value='todo'>To Do</option>\n        <option value='in-progress'>In Progress</option>\n        <option value='done'>Done</option>\n      </select>\n      <button onClick={handleSave}>Save</button>\n      <button onClick={onCancel}>Cancel</button>\n    </div>\n  );\n};\n\nexport default TaskEdit;",
    "summary": "Implemented a TaskEdit component in React/TypeScript that allows users to edit the title, description, and status of a task. The component uses local state to manage form inputs and an effect hook to update the state when the task prop changes. It provides onSave and onCancel callbacks to communicate changes to the parent component. The handleSave function calls the updateTask API function to persist changes.",
    "checklist": [
        "Create TaskEdit component with form inputs for title, description, and status",
        "Use local state and effect hook to manage and update form inputs",
        "Implement handleSave function to call updateTask API and handle response",
        "Provide onSave and onCancel callbacks to parent component"
    ]
}