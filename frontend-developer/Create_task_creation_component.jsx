{
    "code": "import React, { useState } from 'react';\n\ninterface TaskFormProps {\n    onAddTask: (title: string, description: string) => void;\n}\n\nconst TaskForm: React.FC<TaskFormProps> = ({ onAddTask }) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [errors, setErrors] = useState({ title: '', description: '' });\n\n    const validateForm = () => {\n        let formIsValid = true;\n        let errors = { title: '', description: '' };\n\n        if (!title.trim()) {\n            errors.title = 'Title is required';\n            formIsValid = false;\n        }\n\n        if (!description.trim()) {\n            errors.description = 'Description is required';\n            formIsValid = false;\n        }\n\n        setErrors(errors);\n        return formIsValid;\n    };\n\n    const handleSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        if (validateForm()) {\n            onAddTask(title, description);\n            setTitle('');\n            setDescription('');\n            setErrors({ title: '', description: '' });\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} noValidate>\n            <div>\n                <label htmlFor='title'>Title</label>\n                <input\n                    type='text'\n                    id='title'\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                {errors.title && <p>{errors.title}</p>}\n            </div>\n            <div>\n                <label htmlFor='description'>Description</label>\n                <textarea\n                    id='description'\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n                {errors.description && <p>{errors.description}</p>}\n            </div>\n            <button type='submit'>Add Task</button>\n        </form>\n    );\n};\n\nexport default TaskForm;",
    "summary": "Implemented a TaskForm component in React with TypeScript. The component includes form fields for the task title and description, along with form validation to ensure that both fields are filled out before submission. If the form is valid, the onAddTask callback is called with the title and description, and the form is reset. Otherwise, error messages are displayed to the user.",
    "checklist": [
        "Create TaskForm component with title and description fields",
        "Implement form validation to check for non-empty title and description",
        "Display error messages if validation fails",
        "Call onAddTask callback with title and description if the form is valid",
        "Reset form fields and errors after successful submission"
    ]
}